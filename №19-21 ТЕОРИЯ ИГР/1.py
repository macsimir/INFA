 # 19
def G(s, p , end):
    "s- кол во камней , p - позиция , end - число для победы"
    if s >= 100 and p == end: #Игрок выигрывает если камней >= 100 и позиция игрока == нужной позиции для конца игры
        return True
    if s < 100 and p == end: #Мы проиграли если уже сделали нужное количество шагов и все равно количество камней меньше тех , что нужны для победы
        return False
    if s >= 100 and p != end: #Когда игрок уже выйграл, но позиция не та ,что нужна для выполнения условия задачи
        return False
    return G(s +1 , p + 1, end) or G(s*2, p+1,end)

for s in range(1,100):# Перебираем диапазон, который указан в самом задании
    if G(s, p=0,end=1):  
        print(s)

# 20
def G(s, p , end):
    "s- кол во камней , p - позиция , end - число для победы"
    if s >= 100 and p == end: #Игрок выигрывает если камней >= 100 и позиция игрока == нужной позиции для конца игры
        return True
    if s < 100 and p == end: #Мы проиграли если уже сделали нужное количество шагов и все равно количество камней меньше тех , что нужны для победы
        return False
    if s >= 100 and p != end: #Когда игрок уже выйграл, но позиция не та ,что нужна для выполнения условия задачи
        return False
    
    if (p+1) % 2 == (end % 2): #Находим того игрока , который должен в итоге победить.Если да , то нам достаточно победить одной веткой
        return G(s +1 , p + 1, end) or G(s*2, p+1,end)
    
    else: #Иначе ходит игрок, который должен проиграть
        return G(s +1 , p + 1, end) and G(s*2, p+1,end) #Куда бы он не сходил соперник должен проиграть 
    
for s in range(1,100):# Перебираем диапазон, который указан в самом задании
    if G(s, p=0,end=3):  
        print(s)